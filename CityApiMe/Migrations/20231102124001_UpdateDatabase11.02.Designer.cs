// <auto-generated />
using System;
using CityApiMe.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityApiMe.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20231102124001_UpdateDatabase11.02")]
    partial class UpdateDatabase1102
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("CityApiMe.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The One with the  big park.",
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The One with the cathedral that was never really finished.",
                            Name = "Antwerp"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The One with the  big tower.",
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("CityApiMe.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("cityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The most visited urban park in the United States.",
                            Name = "Central Park",
                            cityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "A 102-story skyscraper located in Midtown Manhattan.",
                            Name = "Empire State building",
                            cityId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "A Gothic style cathedral.",
                            Name = "Cathedral",
                            cityId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "The finest example of railway architecture in Blegium.",
                            Name = "Antwerp Central Station\"",
                            cityId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "A Wrought iron lattice tower on the Champ de Mars.",
                            Name = "Eiffel Tower",
                            cityId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "The world's largest museum.",
                            Name = "The Louvre",
                            cityId = 3
                        });
                });

            modelBuilder.Entity("CityApiMe.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityApiMe.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("cityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityApiMe.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
